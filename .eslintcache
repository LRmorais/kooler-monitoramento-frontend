[{"C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\index.js":"1","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\App.js":"2","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\routes.js":"3","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\pages\\register.js":"4","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\pages\\login.js":"5","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\testes.js":"6","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\koolerList.js":"7","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\gauge.js":"8","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\maps.js":"9","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\mapStyles.js":"10","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\pages\\temp.js":"11","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\pages\\home.js":"12"},{"size":340,"mtime":1610483063436,"results":"13","hashOfConfig":"14"},{"size":142,"mtime":1610485466438,"results":"15","hashOfConfig":"14"},{"size":530,"mtime":1610548850277,"results":"16","hashOfConfig":"14"},{"size":4771,"mtime":1610485789634,"results":"17","hashOfConfig":"14"},{"size":3839,"mtime":1610485466439,"results":"18","hashOfConfig":"14"},{"size":1211,"mtime":1610483063436,"results":"19","hashOfConfig":"14"},{"size":5026,"mtime":1610483063436,"results":"20","hashOfConfig":"14"},{"size":1067,"mtime":1610548043515,"results":"21","hashOfConfig":"14"},{"size":1751,"mtime":1610546574496,"results":"22","hashOfConfig":"14"},{"size":2134,"mtime":1610483063436,"results":"23","hashOfConfig":"14"},{"size":672,"mtime":1610549494378,"results":"24","hashOfConfig":"14"},{"size":7785,"mtime":1610548975618,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"xnm4r7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\index.js",[],["57","58"],"C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\App.js",[],"C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\routes.js",[],"C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\pages\\register.js",["59","60","61","62"],"import React, { useState } from 'react';\r\nimport { Grid, TextField, Button, InputAdornment } from '@material-ui/core'\r\nimport { AccountCircle, LockRounded } from \"@material-ui/icons\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Register = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [nome, setNome] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [isAuth, setIsAuth] = useState(true);\r\n/*\r\n    const register = () => {\r\n        Axios.post(\"\")\r\n    }\r\n*/\r\n    if (!isAuth) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container style={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <img src=\"/register.svg\"\r\n                        style={{ width: '100%', height: '100%', objectFit: 'fill' }}\r\n                        alt=\"brand\" />\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    item xs={12} sm={6}\r\n                    alignItems=\"center\"\r\n                    direction=\"column\"\r\n                    justify=\"space-between\"\r\n                    style={{ padding: 10 }}>\r\n                    {/* criada 2 divs vazias para alinha o item 2 no centro com space between */}\r\n                    <div />\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        maxWidth: 400,\r\n                        minWidth: 400\r\n                    }}>\r\n                        <Grid container justfy=\"center\">\r\n                            <img\r\n                                src='/ceamazon.jpg'\r\n                                width={200}\r\n                                alt=\"logo\"\r\n                            />\r\n                        </Grid>\r\n                        <TextField\r\n                            label=\"Nome\"\r\n                            margin=\"normal\"\r\n                            value={email}\r\n                            onChange={(event) => { setEmail(event.target.value) }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircle />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            value={email}\r\n                            onChange={(event) => { setEmail(event.target.value) }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircle />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <LockRounded />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n\r\n                        <div style={{ height: 20 }} />\r\n\r\n                        <Button color=\"primary\" variant=\"contained\" onClick={() => console.log(email)}>\r\n                            Registrar\r\n                        </Button>\r\n\r\n                        <div style={{ height: 20 }} />\r\n\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            variant=\"outlined\"\r\n                            onClick={() => setIsAuth(false)}\r\n                        >\r\n                            Já está registrado?\r\n                        </Button>\r\n                    </div>\r\n                    <Grid container justify=\"center\" spacing={2}>\r\n                        <Grid item>\r\n                            <Button color=\"primary\">Go to community page</Button>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Button variant='outlined'> Esqueceu a senha?</Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\pages\\login.js",[],"C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\testes.js",[],"C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\koolerList.js",["63"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport CruzIcon from '@material-ui/icons/LocalHospitalRounded';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Send from '@material-ui/icons/SendOutlined';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nexport default function InteractiveList() {\r\n    const classes = useStyles();\r\n    const [dense, setDense] = React.useState(false);\r\n    const [geleira, setGeleira] = React.useState([{ id: '0', name: '' }])\r\n    const [apelido, setApelido] = React.useState('')\r\n    const [contador, setContador] = React.useState(1)\r\n\r\n    const deletar = (id) => {\r\n        console.log(id)\r\n        const newList = geleira.filter((item) => item.id !== id)\r\n        setGeleira(newList);\r\n    }\r\n    const inserir = () => {\r\n        setContador(contador + 1);\r\n        setGeleira([...geleira, { id: contador, name: apelido }])\r\n        setApelido('')\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Lista de Geleiras cadastradas\r\n                    </Typography>\r\n                    <div className={classes.demo}>\r\n                        <List dense={dense}>\r\n                            {geleira.map((text) => (\r\n                                <div>\r\n                                    {\r\n                                        (() => {\r\n                                            if (text.id !== '0') {\r\n                                                return (\r\n                                                    <ListItem button key={text.id}\r\n                                                    // função onClick vai mudar o estado que define qual vacina estamos buscando no banco de dados\r\n                                                    >\r\n                                                        <ListItemAvatar>\r\n                                                            <Avatar>\r\n                                                                <CruzIcon />\r\n                                                            </Avatar>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary={text.name}\r\n                                                            secondary={text.name}\r\n                                                        />\r\n                                                        <ListItemSecondaryAction>\r\n                                                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => { deletar(text.id) }}>\r\n                                                                <DeleteIcon />\r\n                                                            </IconButton>\r\n                                                        </ListItemSecondaryAction>\r\n\r\n                                                    </ListItem>\r\n                                                )\r\n                                            }\r\n                                        })()\r\n                                    }\r\n                                </div>\r\n\r\n                            ))}\r\n                        </List>\r\n                    </div>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <form className={classes.root} noValidate autoComplete=\"off\" >\r\n                <TextField label=\"Digite um nome\"\r\n                    variant=\"outlined\" value={apelido}\r\n                    onChange={(event) => { setApelido(event.target.value) }}\r\n                />\r\n            </form>\r\n            \r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                endIcon={<Send />}\r\n                onClick={() => inserir()}\r\n                >\r\n                Send\r\n            </Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\gauge.js",[],"C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\maps.js",["64","65","66"],"import React, {useState} from 'react'\r\nimport { \r\n  GoogleMap, \r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n  DirectionsService \r\n} from '@react-google-maps/api';\r\n// importando estilo dark\r\nimport mapStyles from \"./mapStyles.js\";\r\nimport dados from \"./br.json\";\r\nimport { useEffect } from 'react';\r\n\r\nconst libraries = [\"places\"];\r\n// \r\nconst mapContainerStyle = {\r\n  width: '90vw',\r\n  height: '80vh',\r\n}\r\n// coordenadas para localização central do mapa\r\nconst centro = {\r\n  lat: -1.310782,\r\n  lng: -48.457989,\r\n}\r\n// opções do mapa => estilo, scroll, zoom .. etc\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n}\r\n\r\n\r\nfunction Map () {\r\n  const [data,setData] = useState([])\r\n  useEffect(() =>{\r\n    setData(dados)\r\n  });\r\n  // configurações do maps\r\n  const {isLoaded, loadError} = useLoadScript({\r\n    // Api key fornecida pelo google cloud\r\n    googleMapsApiKey: \"AIzaSyCspyKudsMWQLVXXNUR1boTBAkOdN7m32s\",\r\n    libraries,\r\n  });\r\n  // tratamento de erros\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading Maps\"\r\n  // renderização do mapa\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n      mapContainerStyle={mapContainerStyle} \r\n      zoom={13} \r\n      center={centro}\r\n      options={options}>\r\n\r\n      {data.map((data) => (\r\n        <Marker\r\n        key={data.city}\r\n        position={{\r\n          lat: data.lat, lng: data.lng\r\n        }}\r\n        icon={{\r\n          url: \"/vacina.svg\",\r\n          scaledSize: new window.google.maps.Size(50,50),\r\n          origin: new window.google.maps.Point(0,0),\r\n          anchor: new window.google.maps.Point(25,25),\r\n        }}\r\n        />\r\n      ))}\r\n      \r\n      </GoogleMap>\r\n    </div>\r\n  )\r\n}\r\nexport default Map ;\r\n","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\components\\mapStyles.js",["67"],"// Dark mode style\r\n\r\nexport default [\r\n    { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\r\n    { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\r\n    { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\r\n    {\r\n      featureType: \"administrative.locality\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#d59563\" }],\r\n    },\r\n    {\r\n      featureType: \"poi\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#d59563\" }],\r\n    },\r\n    {\r\n      featureType: \"poi.park\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#263c3f\" }],\r\n    },\r\n    {\r\n      featureType: \"poi.park\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#6b9a76\" }],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#38414e\" }],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [{ color: \"#212a37\" }],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#9ca5b3\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#746855\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [{ color: \"#1f2835\" }],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#f3d19c\" }],\r\n    },\r\n    {\r\n      featureType: \"transit\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#2f3948\" }],\r\n    },\r\n    {\r\n      featureType: \"transit.station\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#d59563\" }],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"geometry\",\r\n      stylers: [{ color: \"#17263c\" }],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [{ color: \"#515c6d\" }],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.stroke\",\r\n      stylers: [{ color: \"#17263c\" }],\r\n    },\r\n  ]",["68","69"],"C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\pages\\temp.js",["70"],"import React from 'react';\r\nimport Chart from '../components/gauge';\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst Temp = () => {\r\n    return (\r\n        <div>\r\n            <Grid container style={{ minHeight: '100vh' }}>\r\n                <Grid item item xs={12} sm={6}>\r\n                    <div\r\n                        style={{ width: '100%', height: '100%', objectFit: 'fill' }}\r\n                        alt=\"brand\">\r\n                        <Chart />\r\n                    </div>\r\n\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <p>1</p>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Temp;","C:\\Users\\lucas\\Desktop\\kooler_front_end\\kooler-monitoramento-frontend\\src\\pages\\home.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":9,"column":12,"nodeType":"77","messageId":"78","endLine":9,"endColumn":16},{"ruleId":"75","severity":1,"message":"79","line":9,"column":18,"nodeType":"77","messageId":"78","endLine":9,"endColumn":25},{"ruleId":"75","severity":1,"message":"80","line":10,"column":12,"nodeType":"77","messageId":"78","endLine":10,"endColumn":17},{"ruleId":"75","severity":1,"message":"81","line":10,"column":19,"nodeType":"77","messageId":"78","endLine":10,"endColumn":27},{"ruleId":"75","severity":1,"message":"82","line":40,"column":19,"nodeType":"77","messageId":"78","endLine":40,"endColumn":27},{"ruleId":"75","severity":1,"message":"83","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":6,"endColumn":13},{"ruleId":"75","severity":1,"message":"84","line":7,"column":3,"nodeType":"77","messageId":"78","endLine":7,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":35,"column":3,"nodeType":"77","endLine":35,"endColumn":12,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":1,"nodeType":"90","endLine":82,"endColumn":4},{"ruleId":"71","replacedBy":"91"},{"ruleId":"73","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":9,"column":28,"nodeType":"95","endLine":9,"endColumn":32},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'nome' is assigned a value but never used.","Identifier","unusedVar","'setNome' is assigned a value but never used.","'senha' is assigned a value but never used.","'setSenha' is assigned a value but never used.","'setDense' is assigned a value but never used.","'InfoWindow' is defined but never used.","'DirectionsService' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["98"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["96"],["97"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Add dependencies array: []",{"range":"101","text":"102"},[765,765],", []"]